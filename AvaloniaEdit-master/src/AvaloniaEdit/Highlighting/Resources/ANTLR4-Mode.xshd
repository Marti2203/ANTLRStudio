<?xml version="1.0"?>
<SyntaxDefinition name="ANTLR4" extensions=".g4" xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
    <!-- The named colors 'Comment' and 'String' are used in SharpDevelop to detect if a line is inside a multiline string/comment -->
    <Color name="Comment" foreground="Gray" exampleText="// comment" />
    <Color name="String" foreground="Blue" exampleText="string text = &quot;Hello, World!&quot;"/>
    <Color name="Char" foreground="Magenta" exampleText="char linefeed = '\n';"/>
    <Color name="Punctuation" exampleText="a(b.c);" />
    <Color name="MethodCall" foreground="MidnightBlue" fontWeight="bold" exampleText="o.ToString();"/>
    <Color name="NumberLiteral" foreground="Cyan" exampleText="3.1415f"/>
    <Color name="KeywordGrammar" foreground="DarkBlue" exampleText="grammar"/>
    
    <Property name="DocCommentMarker" value="///" />
    <!-- This is the main ruleset. -->
    <RuleSet>
        
        <Span color="Comment" >
            <Begin>//</Begin>
        </Span>
        
        <Span color="Comment" multiline="true">
            <Begin>/\*</Begin>
            <End>\*/</End>
        </Span>
        
        <Span color="String">
            <Begin>"</Begin>
            <End>"</End>
            <RuleSet>
                <!-- span for escape sequences -->
                <Span begin="\\" end="."/>
            </RuleSet>
        </Span>
        
        <Span color="Char">
            <Begin>'</Begin>
            <End>'</End>
            <RuleSet>
                <!-- span for escape sequences -->
                <Span begin="\\" end="."/>
            </RuleSet>
        </Span>
    
        <Keywords color="KeywordGrammar">
            <Word>grammar</Word>
        </Keywords>
                
        <!-- Mark previous rule-->
        <Rule color="MethodCall">
        \b
        [\d\w_]+  # an identifier
        (?=\s*\() # followed by (
        </Rule>
        
        <!-- Digits -->
        <Rule color="NumberLiteral">
            \b0[xX][0-9a-fA-F]+  # hex number
        |   
            (   \b\d+(\.[0-9]+)?   #number with optional floating point
            |   \.[0-9]+           #or just starting with floating point
            )
            ([eE][+-]?[0-9]+)? # optional exponent
        </Rule>
        
        <Rule color="Punctuation">
            [?,.;()\[\]{}+\-/%*&lt;&gt;^+~!|&amp;]+
        </Rule>
    </RuleSet>
</SyntaxDefinition>
